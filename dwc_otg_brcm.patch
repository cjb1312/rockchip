--- ../broadcom/bcm2835/dwc_otg_brcm.c	2012-12-10 09:53:04.000000000 +0800
+++ dwc_otg_brcm.c	2013-10-04 15:10:56.000000000 +0800
@@ -45,6 +45,7 @@
 #include <sys/malloc.h>
 #include <sys/priv.h>
 #include <sys/rman.h>
+#include <sys/gpio.h>
 
 #include <dev/fdt/fdt_common.h>
 #include <dev/ofw/openfirm.h>
@@ -62,8 +63,12 @@
 #include <dev/usb/usb_controller.h>
 #include <dev/usb/usb_bus.h>
 
+#include "gpio_if.h"
+
 #include <dev/usb/controller/dwc_otg.h>
 
+#define RK30XX_HOST_DRV_VBUS		3
+
 static device_probe_t dwc_otg_probe;
 static device_attach_t dwc_otg_attach;
 static device_detach_t dwc_otg_detach;
@@ -87,6 +92,7 @@
 dwc_otg_attach(device_t dev)
 {
 	struct dwc_otg_super_softc *sc = device_get_softc(dev);
+        device_t sc_gpio_dev;
 	int err;
 	int rid;
 
@@ -124,12 +130,24 @@
 
 	device_set_ivars(sc->sc_otg.sc_bus.bdev, &sc->sc_otg.sc_bus);
 
+        /* Get the GPIO device, we need this to give power to USB */
+        sc_gpio_dev = devclass_get_device(devclass_find("gpio"), 0);
+        if (sc_gpio_dev == NULL) {
+                device_printf(dev, "Error: failed to get the GPIO device\n");
+                goto error;
+        }
+
 	err = bus_setup_intr(dev, sc->sc_otg.sc_irq_res, INTR_TYPE_BIO | INTR_MPSAFE,
 	    NULL, (driver_intr_t *)dwc_otg_interrupt, sc, &sc->sc_otg.sc_intr_hdl);
 	if (err) {
 		sc->sc_otg.sc_intr_hdl = NULL;
 		goto error;
 	}
+
+        /* Give power to OTG HOST */
+        GPIO_PIN_SETFLAGS(sc_gpio_dev, RK30XX_HOST_DRV_VBUS, GPIO_PIN_OUTPUT);
+        GPIO_PIN_SET(sc_gpio_dev, RK30XX_HOST_DRV_VBUS, GPIO_PIN_HIGH);
+
 	err = dwc_otg_init(&sc->sc_otg);
 	if (err == 0) {
 		err = device_probe_and_attach(sc->sc_otg.sc_bus.bdev);
